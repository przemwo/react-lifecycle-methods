{"version":3,"sources":["MyComponent.js","App.js","index.js"],"names":["MyComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateLocalState","setState","_ref","counter","updateLocalStateIgnore","ignore","state","console","log","nextProps","nextState","ignoreProp","prevProps","prevState","react_default","a","createElement","className","onClick","React","Component","App","mountMyComponent","someProp","Date","toggleMountMyComponent","updateSomeProp","updateIgnoreProp","toggleFoo","foo","_this$state","src_MyComponent","ReactDOM","render","src_App","document","getElementById"],"mappings":"uKAmEeA,cA/DX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAiCVQ,iBAAmB,WACfP,EAAKQ,SAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAAH,MAAkB,CAC5BA,UAAWA,MApCAV,EAuCnBW,uBAAyB,kBAAMX,EAAKQ,SAAS,CAAEI,OAAQ,6BArCnDZ,EAAKa,MAAQ,CACTH,QAAS,EACTE,OAAQ,2CAEZE,QAAQC,IAAI,eANGf,mFASfc,QAAQC,IAAI,qBACZD,QAAQC,IAAI,mGAEMC,EAAWC,GAC7B,OAAGA,EAAUL,SAAWT,KAAKU,MAAMD,QAC/BE,QAAQC,IAAI,uCACZD,QAAQC,IAAI,sDACL,GAERC,EAAUE,aAAef,KAAKJ,MAAMmB,YACnCJ,QAAQC,IAAI,2CACZD,QAAQC,IAAI,sDACL,IAEXD,QAAQC,IAAI,+BACL,8CAEQI,EAAWC,GAC1BN,QAAQC,IAAI,sBACZD,QAAQC,IAAI,oGAGZD,QAAQC,IAAI,wBACZD,QAAQC,IAAI,sFAQP,IACGL,EAAYP,KAAKU,MAAjBH,QAER,OADAI,QAAQC,IAAI,UAERM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,SAAKb,GACLW,EAAAC,EAAAC,cAAA,UACIC,UAAU,kBACVC,QAAStB,KAAKI,kBAFlB,8BAMAc,EAAAC,EAAAC,cAAA,UACIC,UAAU,kBACVC,QAAStB,KAAKQ,wBAFlB,qCAtDUe,IAAMC,WC8CjBC,6MA7CXf,MAAQ,CACJgB,kBAAkB,EAClBC,SAAU,IAAIC,KACdb,WAAY,IAAIa,QAEpBC,uBAAyB,WACrBhC,EAAKQ,SAAS,SAAAC,GAAA,MAA2B,CACrCoB,kBADUpB,EAAGoB,uBAIrBI,eAAiB,kBAAMjC,EAAKQ,SAAS,CAAEsB,SAAU,IAAIC,UACrDG,iBAAmB,kBAAMlC,EAAKQ,SAAS,CAAEU,WAAY,IAAIa,UACzDI,UAAY,kBAAMnC,EAAKQ,SAAS,CAAE4B,KAAMpC,EAAKa,MAAMuB,+EAC1C,IAAAC,EAC8ClC,KAAKU,MAAhDgB,EADHQ,EACGR,iBAAkBC,EADrBO,EACqBP,SAAUZ,EAD/BmB,EAC+BnB,WACpC,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,UACIC,UAAU,kBACVC,QAAStB,KAAK6B,wBAEZH,EAAmB,sBAAyB,qBAElDR,EAAAC,EAAAC,cAAA,UACIC,UAAU,kBACVC,QAAStB,KAAK8B,gBAFlB,oBAMAZ,EAAAC,EAAAC,cAAA,UACIC,UAAU,kBACVC,QAAStB,KAAK+B,kBAFlB,sBAMCL,GACGR,EAAAC,EAAAC,cAACe,EAAD,CAAaR,SAAUA,EAAUZ,WAAYA,aAvCnDQ,IAAMC,WCCxBY,IAASC,OAAOnB,EAAAC,EAAAC,cAACkB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a1334f83.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass MyComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            counter: 0,\r\n            ignore: 'do not re-render when this value change',\r\n        };\r\n        console.log('constructor');\r\n    };\r\n    componentDidMount() {\r\n        console.log('componentDidMount');\r\n        console.log('=================================================');\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.ignore !== this.state.ignore) {\r\n            console.log('shouldComponentUpdate: NO, \"ignore\"');\r\n            console.log('=================================================');\r\n            return false;\r\n        };\r\n        if(nextProps.ignoreProp !== this.props.ignoreProp) {\r\n            console.log('shouldComponentUpdate: NO, \"ignoreProp\"');\r\n            console.log('=================================================');\r\n            return false;\r\n        }\r\n        console.log('shouldComponentUpdate: YES');\r\n        return true;\r\n    };\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log('componentDidUpdate');\r\n        console.log('=================================================');\r\n    };\r\n    componentWillUnmount() {\r\n        console.log('componentWillUnmount');\r\n        console.log('=================================================');\r\n    };\r\n    updateLocalState = () => {\r\n        this.setState(({ counter }) => ({\r\n            counter: ++counter,\r\n        }));\r\n    };\r\n    updateLocalStateIgnore = () => this.setState({ ignore: 'ignore has been changed'});\r\n    render() {\r\n        const { counter } = this.state;\r\n        console.log('render');\r\n        return (\r\n            <div className=\"bg-light\">\r\n                <h2>Hello from MyComponent</h2>\r\n                <p>{ counter }</p>\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={this.updateLocalState}\r\n                >\r\n                    Update local state counter\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={this.updateLocalStateIgnore}\r\n                >\r\n                    Update local state ignore\r\n                </button>\r\n            </div>\r\n        );\r\n    };\r\n};\r\nexport default MyComponent;","import React from 'react';\nimport MyComponent from './MyComponent';\n\nclass App extends React.Component {\n    state = {\n        mountMyComponent: true,\n        someProp: new Date(),\n        ignoreProp: new Date(),\n    };\n    toggleMountMyComponent = () => {\n        this.setState(({ mountMyComponent }) => ({\n            mountMyComponent: !mountMyComponent,\n        }));\n    };\n    updateSomeProp = () => this.setState({ someProp: new Date() });\n    updateIgnoreProp = () => this.setState({ ignoreProp: new Date() });\n    toggleFoo = () => this.setState({ foo: !this.state.foo });\n    render() {\n        const { mountMyComponent, someProp, ignoreProp } = this.state;\n        return (\n            <div className=\"container\">\n                <div className=\"jumbotron\">\n                    <h1>Parent component</h1>\n                    <button\n                        className='btn btn-primary'\n                        onClick={this.toggleMountMyComponent}\n                    >\n                        { mountMyComponent ? 'Unmount MyComponent' :  'Mount MyComponent' }\n                    </button>\n                    <button\n                        className='btn btn-primary'\n                        onClick={this.updateSomeProp}\n                    >\n                        Update some prop\n                    </button>\n                    <button\n                        className='btn btn-primary'\n                        onClick={this.updateIgnoreProp}\n                    >\n                        Update ignore prop\n                    </button>\n                    {mountMyComponent &&\n                        <MyComponent someProp={someProp} ignoreProp={ignoreProp} />\n                    }\n                </div>\n            </div>\n        );\n    }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}