{"version":3,"sources":["util/getRandomInt.js","MyComponent.js","App.js","index.js"],"names":["getRandomInt","max","arguments","length","undefined","Math","floor","random","MyComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateLocalState","setState","_ref","counter","updateLocalStateIgnore","ignore","state","console","log","nextProps","nextState","ignoreProp","prevProps","prevState","_this$state","_this$props","someProp","count","react_default","a","createElement","className","onClick","React","Component","App","mountMyComponent","toggleMountMyComponent","updateSomeProp","updateIgnoreProp","toggleFoo","foo","src_MyComponent","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.eb717da1.chunk.js","sourcesContent":["export default (max = 1000) => Math.floor(Math.random() * max + 1);","import React from 'react';\r\n\r\nimport getRandomInt from './util/getRandomInt';\r\n\r\nclass MyComponent extends React.Component {\r\n    // Lifecycle methods\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            counter: 0,\r\n            ignore: getRandomInt(1000),\r\n        };\r\n        console.log('constructor');\r\n    };\r\n    componentDidMount() {\r\n        console.log('componentDidMount');\r\n        console.log('=================================================');\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.ignore !== this.state.ignore) {\r\n            console.log('shouldComponentUpdate: NO, \"ignore\"');\r\n            console.log('=================================================');\r\n            return false;\r\n        };\r\n        if(nextProps.ignoreProp !== this.props.ignoreProp) {\r\n            console.log('shouldComponentUpdate: NO, \"ignoreProp\"');\r\n            console.log('=================================================');\r\n            return false;\r\n        }\r\n        console.log('shouldComponentUpdate: YES');\r\n        return true;\r\n    };\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log('componentDidUpdate');\r\n        console.log('=================================================');\r\n    };\r\n    componentWillUnmount() {\r\n        console.log('componentWillUnmount');\r\n        console.log('=================================================');\r\n    };\r\n    // update internal state as the result of changes in props without additional render\r\n    static getDerivedStateFromProps(props, state) {\r\n        console.log('getDerivedStateFromProps');\r\n        return null;\r\n    }\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        console.log('getSnapshotBeforeUpdate');\r\n        return null;\r\n        \r\n    }\r\n    render() {\r\n        const { counter, ignore } = this.state;\r\n        const { someProp, ignoreProp } = this.props;\r\n        console.count('render');\r\n        return (\r\n            <div className=\"bg-light\">\r\n                <h2>Hello from MyComponent</h2>\r\n                <p>Counter: { counter }</p>\r\n                <p>Ignore: { ignore }</p>\r\n                <hr />\r\n                <p>someProp: { someProp }</p>\r\n                <p>ignoreProp: { ignoreProp }</p>\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={this.updateLocalState}\r\n                >\r\n                    Update local state counter\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={this.updateLocalStateIgnore}\r\n                >\r\n                    Update local state ignore\r\n                </button>\r\n            </div>\r\n        );\r\n    };\r\n    // Other methods\r\n    updateLocalState = () => {\r\n        this.setState(({ counter }) => ({\r\n            counter: ++counter,\r\n        }));\r\n    };\r\n    updateLocalStateIgnore = () => this.setState({ ignore: getRandomInt(1000) });    \r\n};\r\nexport default MyComponent;","import React from 'react';\r\n\r\nimport MyComponent from './MyComponent';\r\nimport getRandomInt from './util/getRandomInt';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        mountMyComponent: true,\r\n        someProp: getRandomInt(1000),\r\n        ignoreProp: getRandomInt(1000),\r\n    };\r\n    toggleMountMyComponent = () => {\r\n        this.setState(({ mountMyComponent }) => ({\r\n            mountMyComponent: !mountMyComponent,\r\n        }));\r\n    };\r\n    updateSomeProp = () => this.setState({ someProp: getRandomInt(1000) });\r\n    updateIgnoreProp = () => this.setState({ ignoreProp: getRandomInt(1000) });\r\n    toggleFoo = () => this.setState({ foo: !this.state.foo });\r\n    render() {\r\n        const { mountMyComponent, someProp, ignoreProp } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"jumbotron\">\r\n                    <h1>Parent component</h1>\r\n                    <button\r\n                        className='btn btn-primary'\r\n                        onClick={this.toggleMountMyComponent}\r\n                    >\r\n                        { mountMyComponent ? 'Unmount MyComponent' :  'Mount MyComponent' }\r\n                    </button>\r\n                    <button\r\n                        className='btn btn-primary'\r\n                        onClick={this.updateSomeProp}\r\n                    >\r\n                        Update some prop\r\n                    </button>\r\n                    <button\r\n                        className='btn btn-primary'\r\n                        onClick={this.updateIgnoreProp}\r\n                    >\r\n                        Update ignore prop\r\n                    </button>\r\n                    {mountMyComponent &&\r\n                        <MyComponent someProp={someProp} ignoreProp={ignoreProp} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}